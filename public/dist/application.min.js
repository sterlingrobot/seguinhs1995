"use strict";var ApplicationConfiguration=function(){var applicationModuleName="shs",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngSanitize","ui.router","ui.bootstrap","ui.utils","spotify","uiGmapgoogle-maps","ngCkeditor","angularPayments"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("tracks",["spotify"]),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Posts","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","See All Posts","articles"),Menus.addSubMenuItem("topbar","articles","New Post","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.editorOptions={skin:"kama",pasteFilter:"p h1 h2; a[!href]",uiColor:"#aaa"},$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(function(){}).run(["Menus",function(Menus){Menus.addMenuItem("topbar","The Event","event","item"),Menus.addMenuItem("topbar","The Playlist","tracks","item"),Menus.addMenuItem("topbar","The Map","map","item"),Menus.addMenuItem("topbar","The SWAG","swag","item")}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("event",{url:"/event",templateUrl:"modules/core/views/event.client.view.html"}).state("register",{url:"/register",templateUrl:"modules/core/views/register.client.view.html"}).state("swag",{url:"/swag",templateUrl:"modules/core/views/swag.client.view.html"})}]),angular.module("core").controller("EventController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","Articles",function($scope,Authentication,Articles){$scope.authentication=Authentication,$scope.emailSignup=!1,$scope.counter=Math.ceil((new Date("10/9/2015")-new Date)/864e5),$scope.toggleForm=function(){$scope.emailSignup=!$scope.emailSignup,$scope.error=""},$scope.findRecent=function(){$scope.articles=Articles.query()}}]),angular.module("core").controller("RegisterController",["$scope","$window","$log","$timeout","Users","Authentication","Payments",function($scope,$window,$log,$timeout,Users,Authentication,Payments){$scope.user=Authentication.user,$scope.price=2500,$scope.guests=$scope.user.registration?parseInt($scope.user.registration.guests):1,$scope.showForm=!1,$scope.showGuests=!1,$scope.error={},$scope.loading=!1,$scope.name=$scope.user.displayName,$scope.user.address=$scope.user.address||{},$scope.addressLine1=$scope.user.address.street||"",$scope.addressCity=$scope.user.address.city||"",$scope.addressState=$scope.user.address.state||"",$scope.addressZip=$scope.user.address.zip||"",$window.Stripe.setPublishableKey("pk_test_KyPkT2u6Ags4pupzDmph9pC7");var processCharge=function(token){var amount=$scope.guests*$scope.price-$scope.paidToDate();if(0>amount)return $scope.loading=!1,$scope.error.message='<h4>Please email us a <a href="mailto:seguinhs1995@gmail.com?Subject=Refund+Request+for+20th+Reunion">seguinhs1995@gmail.com</a> for refunds or assistance changing your reservation.<br>Thank you!</h4>',void($scope.error.level="alert-info");var payment=new Payments({user:$scope.user,amount:amount,token:token,guests:parseInt($scope.guests)});payment.$charge(function(charge){var user=new Users($scope.user);user.registration=user.registration||{},user.registration.registered=!0,user.registration.guests=charge.metadata.guests,user.registration.payments=user.registration.payments||[],user.registration.payments.push(charge),user.registration.customer=charge.customer,user.$update(function(response){$scope.user=Authentication.user=response,$scope.guests=parseInt($scope.user.registration.guests),$scope.error.message="Your payment has been processed successfully. <h4>Thank you for registering!</h4><p>You will receive a receipt by email!</p>",$scope.error.level="alert-success",$timeout(function(){$scope.error={},$scope.loading=!1,$scope.showForm=!1},5e3)},function(errorResponse){$log.log(errorResponse),$scope.error.message="Error:"+errorResponse.data.message,$scope.error.level="alert-danger",$timeout(function(){$scope.error={},$scope.loading=!1},5e3)})},function(errorResponse){$log.log(errorResponse),$scope.error.message=errorResponse.data.message,$scope.error.level="alert-danger",$timeout(function(){$scope.error={},$scope.loading=!1},5e3)})};$scope.stripeCallback=function(code,result){if($scope.loading=!0,result.error)$log.log(result),$scope.error.level="alert-warning",$scope.error.message=result.error,$timeout(function(){$scope.error={},$scope.loading=!1},5e3);else{var user=new Users($scope.user);user.address.street=$scope.addressLine1,user.address.city=$scope.addressCity,user.address.state=$scope.addressState,user.address.zip=$scope.addressZip,user.$update(function(response){$scope.user=Authentication.user=response,processCharge(result.id)})}},$scope.processRSVP=function(){$scope.loading=!0;var amount=$scope.guests*$scope.price-$scope.paidToDate();if(0>amount)return $scope.loading=!1,$scope.error.message='<h4>Please email us a <a href="mailto:seguinhs1995@gmail.com?Subject=Refund+Request+for+20th+Reunion">seguinhs1995@gmail.com</a> for refunds or assistance changing your reservation.<br>Thank you!</h4>',void($scope.error.level="alert-info");var user=new Users($scope.user);user.address.street=$scope.addressLine1,user.address.city=$scope.addressCity,user.address.state=$scope.addressState,user.address.zip=$scope.addressZip,user.registration=user.registration||{},user.registration.registered=!0,user.registration.guests=parseInt($scope.guests),user.$update(function(response){$scope.user=Authentication.user=response,$scope.guests=$scope.user.registration.guests,$scope.showForm=!1,$scope.error.level="alert-success",$scope.error.message="<h4>Thank you for registering!</h4><br>We can't wait to see you there!",$timeout(function(){$scope.error={},$scope.loading=!1},5e3)})},$scope.paidToDate=function(){var paid=0;return $scope.user.registration&&$scope.user.registration.payments&&$scope.user.registration.payments.forEach(function(pmt){paid+=pmt.amount}),paid}}]),angular.module("core").controller("SwagController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("Payments",["$resource",function($resource){return $resource("register/:userId",{userId:"@_id"},{charge:{method:"POST",params:{charge:!0}}})}]),angular.module("tracks").run(["Menus",function(){}]),angular.module("tracks").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTracks",{url:"/tracks",templateUrl:"modules/tracks/views/list-tracks.client.view.html"})}]),angular.module("tracks").controller("TracksController",["$scope","$log","$stateParams","$location","$anchorScroll","$timeout","$sce","Authentication","Spotify","Tracks",function($scope,$log,$stateParams,$location,$anchorScroll,$timeout,$sce,Authentication,Spotify,Tracks){$scope.authentication=Authentication,$scope.error={},$scope.audio=new Audio,$scope.lookup={},$scope.saveTrack=function($item){console.log($item);var track=new Tracks({spotifyId:$item.id,title:$item.name,artist:$item.artists[0].name,artwork:$item.album.images[1].url,preview_url:$item.preview_url});track.$save(function(response){console.log(response),$scope.tracks.push(response)},function(errorResponse){$log.log(errorResponse);var spotifyId=errorResponse.config.data.spotifyId,trkId="track_"+spotifyId;$scope.error.message=errorResponse.data.message,$scope.error.level="alert-warning",$timeout(function(){$scope.error={}},5e3),$location.hash(trkId),$log.log($scope.lookup[spotifyId])})},$scope.remove=function(track){track&&track.$remove(function(){for(var i in $scope.tracks)$scope.tracks[i]===track&&$scope.tracks.splice(i,1)},function(errorResponse){403===errorResponse.status&&($scope.error.message="You can only trash tracks you've added.",$scope.error.level="alert-info",$timeout(function(){$scope.error={}},3e3))})},$scope.update=function(track){track.$update(function(){$location.path("tracks/"+track._id)},function(errorResponse){$scope.error.message=errorResponse.data.message,$scope.error.level="alert-warning"})},$scope.upvote=function(trk){var track=trk||$scope.track;return track.upvotes.indexOf(Authentication.user._id)>-1?($scope.error.message="You've already upvoted "+track.title,$scope.error.level="alert-info",void $timeout(function(){$scope.error={}},3e3)):(track.votes++,track.upvotes.push(Authentication.user._id),track.downvotes.splice(track.downvotes.indexOf(Authentication.user._id),1),$log.log(track),void track.$update(function(){},function(errorResponse){$scope.error.message=errorResponse.data.message,$scope.error.level="alert-warning"}))},$scope.downvote=function(trk){var track=trk||$scope.track;return track.downvotes.indexOf(Authentication.user._id)>-1?($scope.error.message="You've already downvoted "+track.title,$scope.error.level="alert-info",void $timeout(function(){$scope.error={}},3e3)):(track.votes--,track.downvotes.push(Authentication.user._id),track.upvotes.splice(track.upvotes.indexOf(Authentication.user._id),1),$log.log(track),void track.$update(function(){},function(errorResponse){$scope.error.message=errorResponse.data.message,$scope.error.level="alert-warning"}))},$scope.searchTracks=function(val){var q=val,options={limit:10,offset:0};return Spotify.search(q,"track",options).then(function(data){return data.tracks.items})},$scope.getAllTracks=function(){var idArray=[];return $scope.tracks&&(idArray=$scope.tracks.map(function(track){return track.spotifyId})),$sce.trustAsResourceUrl("https://embed.spotify.com/?uri=spotify:trackset:Reunion Playlist:"+idArray.join(","))},$scope.playPreview=function(track){$scope.tracks.forEach(function(trk){trk.isPlaying=!1}),track.isPlaying=!0,$scope.audio.src=track.preview_url,$scope.audio.play()},$scope.pausePreview=function(track){track.isPlaying=!1,$scope.audio.pause()},$scope.find=function(){$scope.tracks=Tracks.query()},$scope.findOne=function(){$scope.track=Tracks.get({trackId:$stateParams.trackId})}}]),angular.module("tracks").factory("Tracks",["$resource",function($resource){return $resource("tracks/:trackId",{trackId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]).config(["uiGmapGoogleMapApiProvider",function(uiGmapGoogleMapApiProvider){uiGmapGoogleMapApiProvider.configure({key:"AIzaSyCYtSsxmAc8maGMVwWmeJI7ia2CkY_bBzw",v:"3.17",libraries:"weather,geometry,visualization,places"})}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("map",{url:"/map",templateUrl:"modules/users/views/map/map.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","$timeout","Authentication",function($scope,$http,$location,$timeout,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message,$timeout(function(){$scope.error=""},3e3)})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message,$timeout(function(){$scope.error=""},3e3)})}}]),angular.module("users").controller("MapController",["$scope","$log","$location","$http","uiGmapGoogleMapApi","Users","Authentication",function($scope,$log,$location,$http,GoogleMapApi,Users,Authentication){function locationFinder(){var users=Users.query();return users.$promise.then(function(data){data.forEach(function(user){user._id===$scope.user._id?(user.address&&user.address.allowMapPin&&($scope.marker=createMapMarker(user)),("undefined"==typeof user.address||"undefined"==typeof user.address.allowMapPin)&&($scope.error={level:"info",message:"<h4>Put your city on the map?</h4><p>Don't worry, your exact address will <b>not</b> be shown</p>"})):user.address&&user.address.allowMapPin&&createMapMarker(user)}),pinsPosted=!0})}function createMapMarker(user){if(!user.address.geometry)return void placesSearch([user.address.city,user.address.state].join(", ")).then(function(data){user.address.geometry={lat:data.geometry.location.lat(),lng:data.geometry.location.lng()},user.$update(function(){user._id===$scope.user._id?$scope.marker=createMapMarker(user):createMapMarker(user)})});var lat=user.address.geometry.lat,lng=user.address.geometry.lng,name="<h4>"+user.displayName+"</h4>",city="<p>"+user.address.city+", "+user.address.state+"</p>",marker=new googlemaps.Marker({map:mapdiv,position:new googlemaps.LatLng(lat,lng),title:user.displayName}),infoWindow=new googlemaps.InfoWindow({content:[name,city].join(""),maxWidth:300});return googlemaps.event.addListener(marker,"click",function(){currWindow&&currWindow.close(),infoWindow.open(mapdiv,this),currWindow=infoWindow}),mapBounds.extend(new googlemaps.LatLng(lat,lng)),mapdiv.fitBounds(mapBounds),marker}function placesSearch(loc){return new Promise(function(resolve,reject){service.textSearch({query:loc},function(results,status){$log.log(results,status),status===googlemaps.places.PlacesServiceStatus.OK?resolve(results[0]):reject(Error("Could not find place data"))})})}var googlemaps,service,mapdiv,mapBounds,currWindow,pinsPosted=!1;$scope.user=Authentication.user,$scope.markers=[],$scope.map={control:{},center:{latitude:29.5744,longitude:-97.9653},zoom:5,events:{tilesloaded:function(map){$scope.$apply(function(){mapdiv=map,service=new googlemaps.places.PlacesService(mapdiv),pinsPosted||locationFinder()})}}},GoogleMapApi.then(function(maps){googlemaps=maps,mapBounds=new googlemaps.LatLngBounds}),$scope.addLocation=function(){},$scope.allowPin=function(allow){var user=new Users($scope.user),allowed=user.address?user.address.allowMapPin:!1;allow&&!user.address.city?$location.path("/settings/profile"):(user.address=user.address||{},user.address.allowMapPin=allow,user.$update(function(){user.address.allowMapPin&&($scope.marker=createMapMarker(user),$scope.map.zoom=5),allowed&&!user.address.allowMapPin&&($scope.marker.setMap(null),delete $scope.marker,$scope.map.zoom=5,$scope.map.center={latitude:29.5744,longitude:-97.9653}),$scope.error={}}))}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);